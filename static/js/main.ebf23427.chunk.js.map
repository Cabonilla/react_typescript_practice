{"version":3,"sources":["components/NewTodo.module.css","components/TodoItem.module.css","components/Todos.module.css","models/todo.ts","store/todos-context.tsx","components/NewTodo.tsx","components/TodoItem.tsx","components/Todos.tsx","App.tsx","index.tsx"],"names":["module","exports","Todo","todoText","id","text","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","removeTodo","TodosContextProvider","props","useState","todos","setTodos","contextValue","newTodo","prevTodos","concat","todoId","filter","todo","Provider","value","children","NewTodo","todosCtx","useContext","todoTextInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","trim","length","className","classes","form","htmlFor","type","ref","TodoItem","item","onClick","onRemoveTodo","Todos","map","bind","App","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,8GCSXC,EANd,WAAYC,GAAmB,yBAH/BC,QAG8B,OAF9BC,UAE8B,EAC7BC,KAAKF,IAAK,IAAIG,MAAOC,cACrBF,KAAKD,KAAOF,G,OCGDM,EAAeC,IAAMC,cAA+B,CAChEC,MAAO,GACPC,QAAS,aACTC,WAAY,SAACV,OAiCCW,EA9BwB,SAACC,GACvC,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAgBMC,EAAgC,CACrCR,MAAOM,EACPL,QAhBsB,SAACV,GACvB,IAAMkB,EAAU,IAAInB,EAAKC,GAEzBgB,GAAS,SAACG,GACT,OAAOA,EAAUC,OAAOF,OAazBP,WATyB,SAACU,GAC1BL,GAAS,SAACG,GACT,OAAOA,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKtB,KAAOoB,UAUhD,OACC,cAACf,EAAakB,SAAd,CAAuBC,MAAOR,EAA9B,SACEJ,EAAMa,Y,gBCVKC,EA1BW,WACzB,IAAMC,EAAWC,qBAAWvB,GAEtBwB,EAAmBC,iBAAyB,MAclD,OACC,uBAAMC,SAbe,SAACC,GACtBA,EAAMC,iBAEN,IAAMC,EAAcL,EAAiBM,QAASX,MAEZ,IAA9BU,EAAYE,OAAOC,QAIvBV,EAASlB,QAAQyB,IAIcI,UAAWC,IAAQC,KAAlD,UACC,uBAAOC,QAAQ,OAAf,uBACA,uBAAOC,KAAK,OAAO1C,GAAG,OAAO2C,IAAKd,IAClC,kD,gBChBYe,EANsD,SAAChC,GACrE,OACC,oBAAI0B,UAAWC,IAAQM,KAAMC,QAASlC,EAAMmC,aAA5C,SAA2DnC,EAAMX,Q,gBCgBpD+C,EAhBS,WACxB,IAAMrB,EAAWC,qBAAWvB,GAE3B,OACC,oBAAIiC,UAAWC,IAAQzB,MAAvB,SACEa,EAASnB,MAAMyC,KAAI,SAACJ,GAAD,OACnB,cAAC,EAAD,CAEC5C,KAAM4C,EAAK5C,KACX8C,aAAcpB,EAASjB,WAAWwC,KAAK,KAAML,EAAK7C,KAF7C6C,EAAK7C,UCCAmD,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,MCJNC,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.ebf23427.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__13PW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3ZIEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__vbRZu\"};","class Todo {\r\n\tid: string;\r\n\ttext: string;\r\n\r\n\tconstructor(todoText: string) {\r\n\t\tthis.id = new Date().toISOString();\t\r\n\t\tthis.text = todoText;\r\n\t}\r\n}\r\n\r\nexport default Todo","import React, { useState } from \"react\";\r\nimport Todo from \"../models/todo\";\r\n\r\ntype TodosContextObj = {\r\n items: Todo[];\r\n addTodo: (text: string) => void;\r\n removeTodo: (id: string) => void;\r\n}\r\n\r\nexport const TodosContext = React.createContext<TodosContextObj>({\r\n items: [],\r\n addTodo: () => {},\r\n removeTodo: (id: string) => {},\r\n});\r\n\r\nconst TodosContextProvider: React.FC = (props) => {\r\n const [todos, setTodos] = useState<Todo[]>([]);\r\n\r\n const addTodoHandler = (todoText: string) => {\r\n  const newTodo = new Todo(todoText);\r\n\r\n  setTodos((prevTodos) => {\r\n   return prevTodos.concat(newTodo);\r\n  });\r\n };\r\n\r\n const removeTodoHandler = (todoId: string) => {\r\n  setTodos((prevTodos) => {\r\n   return prevTodos.filter((todo) => todo.id !== todoId);\r\n  });\r\n };\r\n\r\n const contextValue: TodosContextObj = {\r\n  items: todos,\r\n  addTodo: addTodoHandler,\r\n  removeTodo: removeTodoHandler,\r\n };\r\n\r\n return (\r\n  <TodosContext.Provider value={contextValue}>\r\n   {props.children}\r\n  </TodosContext.Provider>\r\n );\r\n};\r\n\r\nexport default TodosContextProvider;","import { useContext, useRef } from 'react';\r\nimport { TodosContext } from '../store/todos-context';\r\nimport classes from './NewTodo.module.css';\r\n\r\nconst NewTodo: React.FC = () => {\r\n\tconst todosCtx = useContext(TodosContext)\r\n\r\n\tconst todoTextInputRef = useRef<HTMLInputElement>(null);\r\n\r\n\tconst submitHandler = (event: React.FormEvent) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst enteredText = todoTextInputRef.current!.value;\r\n\r\n\t\tif (enteredText.trim().length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttodosCtx.addTodo(enteredText)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler} className={classes.form}>\r\n\t\t\t<label htmlFor='text' >Todo text</label>\r\n\t\t\t<input type=\"text\" id=\"text\" ref={todoTextInputRef}/>\r\n\t\t\t<button>Add todo</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default NewTodo","import React from 'react';\r\nimport classes from './TodoItem.module.css';\r\n\r\nconst TodoItem: React.FC<{text: string; onRemoveTodo: () => void}> = (props) => {\r\n\treturn (\r\n\t\t<li className={classes.item} onClick={props.onRemoveTodo}>{props.text}</li>\r\n\t)\r\n}\r\n\r\nexport default TodoItem;","import React, { useContext } from \"react\";\r\nimport { TodosContext } from '../store/todos-context';\r\nimport TodoItem from \"./TodoItem\";\r\nimport classes from \"./Todos.module.css\";\r\n\r\nconst Todos: React.FC = () => {\r\nconst todosCtx = useContext(TodosContext);\r\n\r\n return (\r\n  <ul className={classes.todos}>\r\n   {todosCtx.items.map((item) => (\r\n    <TodoItem\r\n     key={item.id}\r\n     text={item.text}\r\n     onRemoveTodo={todosCtx.removeTodo.bind(null, item.id)}\r\n    ></TodoItem>\r\n   ))}\r\n  </ul>\r\n );\r\n};\r\n\r\nexport default Todos;\r\n","import NewTodo from './components/NewTodo';\nimport Todos from './components/Todos';\nimport TodosContextProvider from './store/todos-context';\n\nfunction App() {\n  return (\n    <TodosContextProvider>\n      <NewTodo/>\n      <Todos/>\n    </TodosContextProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}